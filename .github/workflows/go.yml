name: Go CI

on:
    push:
        branches:
            - main
            - release-*
            - v*
        paths:
            - glide-core/src/**
            - glide-core/redis-rs/redis/src/**
            - utils/cluster_manager.py
            - go/**
            - .github/workflows/go.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-engine/action.yml
            - .github/workflows/create-test-matrices/action.yml
            - .github/json_matrices/**
    pull_request:
        paths:
            - glide-core/src/**
            - glide-core/redis-rs/redis/src/**
            - utils/cluster_manager.py
            - go/**
            - .github/workflows/go.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-engine/action.yml
            - .github/workflows/create-test-matrices/action.yml
            - .github/json_matrices/**
    workflow_dispatch:
        inputs:
            full-matrix:
                description: "Run the full engine, host, and language version matrix"
                type: boolean
                default: false
            name:
                required: false
                type: string
                description: "(Optional) Test run name"

    workflow_call:

concurrency:
    group: go-${{ github.head_ref || github.ref }}-${{ toJson(inputs) }}
    cancel-in-progress: true

run-name:
    # Set custom name if job is started manually and name is given
    ${{ github.event_name == 'workflow_dispatch' && (inputs.name == '' && format('{0} @ {1} {2}', github.ref_name, github.sha, toJson(inputs)) || inputs.name) || '' }}

env:
    CARGO_TERM_COLOR: always

jobs:
    test-modules:
        if: (github.repository_owner == 'valkey-io' && github.event_name == 'workflow_dispatch') || github.event.pull_request.head.repo.owner.login == 'valkey-io'
        environment: AWS_ACTIONS
        name: Modules Tests
        runs-on: [self-hosted, linux, ARM64]
        timeout-minutes: 15
        steps:
            - name: Setup self-hosted runner access
              run: |
                  cat /etc/environment
                  sudo chown -R $USER:$USER /home/ubuntu/actions-runner/_work/valkey-glide
                  sudo apt-get update
                  sudo apt-get install -y make cmake gcc procps tree git openssl unzip
                  
                  PB_REL="https://github.com/protocolbuffers/protobuf/releases"
                  curl -LO $PB_REL/download/v29.1/protoc-29.1-linux-x86_64.zip
                  unzip protoc-29.1-linux-x86_64.zip -d $HOME/.local
                  sudo cp $HOME/.local/bin/protoc /usr/bin/
                  protoc --version
                  
                  cat /etc/environment
                  
                  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
                  rustup component add clippy rustfmt
                  cargo --version
                  rustc --version

            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.20.0"
                  cache-dependency-path: go/go.sum

            - name: Build and test
              working-directory: ./go
              run: |
                  make install-tools-go1.20.0 build modules-test cluster-endpoints=${{ secrets.MEMDB_MODULES_ENDPOINT }} tls=true

            - name: Upload test reports
              if: always()
              continue-on-error: true
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports-modules
                  path: |
                      go/reports/**
