syntax = "proto3";
package pb_message;

enum RequestType {
    /// Invalid request type
    InvalidRequest = 0;
    /// Type of a get string request.
    GetString = 1;
    /// Type of a set string request.
    SetString = 2;
}

message RedisRequest {
    message ArgsArray {
        repeated string args = 1;
    }
    
    uint32 callback_idx = 1;
    RequestType request_type = 2;
    oneof args {
        ArgsArray args_array = 3;
        uint64 args_vec_pointer = 4;
    }
}

message AddressInfo {
    string host = 1;
    uint32 port = 2;
    bool insecure = 3;
}

enum ReadFromReplicaStrategy {
    AlwaysFromPrimary = 0;
    RoundRobin = 1;
    LowestLatency = 2;
    AZAffinity = 3;
}

message ConnectionRequest {
    repeated AddressInfo addresses = 1;
    bool use_tls = 2;
    uint32 response_timeout = 3;
    uint32 connection_timeout = 4;
    // credentials - TODO - implement
    ReadFromReplicaStrategy read_from_replica_strategy = 5;
    ConnectionRetryStrategy connection_retry_strategy = 6;
}

message ConnectionRetryStrategy {
    uint32 number_of_retries = 1;
    uint32 factor = 2;
    uint32 exponent_base = 3;
}

message Response {
    uint32 callback_idx = 1;
    oneof value {
        uint64 resp_pointer = 2;
        ConstantResponse constant_response = 3;
        string request_error = 4;
        string closing_error = 5;
    }
}

enum ConstantResponse {
  OK = 0;
}
